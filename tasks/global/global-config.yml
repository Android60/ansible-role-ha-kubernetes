---

###
# Enable CRI plugin and set cgroup driver to systemd as per:
# https://kubernetes.io/docs/setup/production-environment/container-runtimes/#forwarding-ipv4-and-letting-iptables-see-bridged-traffic
#

- name: Remove cri from disabled plugins list
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    state: absent
    line: disabled_plugins = ["cri"]

- name: Restart containerd
  ansible.builtin.service:
    name: containerd
    state: restarted

###
# Disable swap
#

- name: Remove swap ftsab entires
  ansible.builtin.lineinfile:
    path: /etc/fstab
    state: absent
    regexp: "^.*swap.*$"

- name: Disable swap
  ansible.builtin.command: swapoff -av
  register: swapoff
  changed_when: "'swapoff' in swapoff.stdout"

###
# Setup IP Tables as per:
# https://kubernetes.io/docs/setup/production-environment/container-runtimes/#forwarding-ipv4-and-letting-iptables-see-bridged-traffic
#

- name: Set load peristence for br_netfilter and overlay modules
  become: true
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/kubernetes.conf
    line: "{{ item }}"
    create: true
    owner: root
    group: root
    mode: "0644"
  with_items:
    - br_netfilter
    - overlay

- name: Ensure br_netfilter and overlay modules are loaded
  community.general.modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - br_netfilter
    - overlay

- name: Configure IP Tables
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: '1'
    state: present
  with_items:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables
    - net.ipv4.ip_forward

###
# Set host names if ansible_host is declared as a hostname
#

- name: Resolve hostname, set node_ip set /etc/hosts
  when: not ansible_host | ansible.utils.ipaddr
  block:

    - name: Resolve IP when ansible_host is hostname
      ansible.builtin.debug:
        msg: "{{ lookup('community.general.dig', '{{ ansible_host }}') }}"
      register: ipaddr

    - name: Set ip fact
      ansible.builtin.set_fact:
        node_ip: "{{ ipaddr.msg }}"

    - name: Make sure /etc/hosts exists
      ansible.builtin.file:
        path: /etc/hosts
        owner: root
        group: adm
        mode: "0644"
        state: file

    - name: Add /etc/hosts entires
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ hostvars[item].node_ip }} {{ hostvars[item].ansible_host }}"
      with_items: "{{ groups.all }}"
