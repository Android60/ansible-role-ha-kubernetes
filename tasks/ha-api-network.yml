---
- name: Get cluster interface
  ansible.builtin.set_fact:
    cluster_interface: "{{ item }}"
  with_items:
    - "{{ ansible_interfaces }}"
  when:
    - hostvars[inventory_hostname]['ansible_' + item]['ipv4'] is defined
    - hostvars[inventory_hostname]['ansible_' + item]['ipv4']['address'] == node_ip

- name: Increase VRRP Priority of lead controller higher for determinism
  ansible.builtin.set_fact:
    vrrp_pri: "{{ vrrp_pri | int + 1 }}"
  when: inventory_hostname == lead_controller

  ###
  # Deploy keepalived
  #

- name: Deploy keepalived
  ansible.builtin.include_role:
    name: ansible-keepalived
  vars:
    keepalived_global_defs:
      - enable_script_security
      - script_user "{{ ansible_user }}"
    keepalived_scripts:
      chk_haproxy:
        check_script: "pgrep haproxy"
    keepalived_instances:
      vrrp:
        state: MASTER
        interface: "{{ cluster_interface }}"
        virtual_router_id: 42
        priority: "{{ vrrp_pri }}"
        advert_int: 1
        unicast_src_ip: "{{ node_ip }}"
        authentication_password: fregsr9
        vips:
          - "{{ vrrp_virtual_ip }} dev {{ cluster_interface }}"
        unicast_peers: "{{ groups.controllers | map('extract', hostvars, ['node_ip']) | list }}"
        track_scripts:
          - chk_haproxy

- name: Add HAProxy config
  ansible.builtin.template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    owner: root
    group: root
    mode: "0644"

- name: Start/Enable HAProxy
  ansible.builtin.service:
    name: haproxy
    enabled: true
    state: restarted

- name: Wait for API Reachability
  ansible.builtin.wait_for:
    host: "{{ vrrp_virtual_ip }}"
    port: "{{ haproxy_listen_port }}"
    delay: 2
