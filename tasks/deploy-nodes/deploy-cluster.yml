---

  ###
  # Set kubernetes_role vars for geerlingguy.kubernetes
  #

- name: Set lead controller to 'control_plane' for geerlingguy.kubernetes
  ansible.builtin.set_fact:
    kubernetes_role: "control_plane"
  when: inventory_hostname == lead_controller

- name: Set non lead controllers to "null" to skip initialization in geerlingguy.kubernetes
  ansible.builtin.set_fact:
    kubernetes_role: "null"
  when: inventory_hostname != lead_controller

  ###
  # Install Kubernetes and Deploy Cluster
  #

- name: Restart containerd
  ansible.builtin.service:
    name: containerd
    state: restarted

- name: Restart kubelet
  ignore_errors: true
  ansible.builtin.service:
    name: kubelet
    state: restarted

- name: Install Kubernetes and start cluster
  ansible.builtin.include_role:
    name: geerlingguy.kubernetes
  vars:
    kubernetes_config_init_configuration:
      localAPIEndpoint:
        advertiseAddress: "{{ node_ip }}"
      nodeRegistration:
        name: "{{ node_name }}"
        kubeletExtraArgs:
          address: "{{ node_ip }}"
    kubernetes_kubeadm_init_extra_opts: "--upload-certs"
    kubernetes_config_cluster_configuration:
      networking:
        podSubnet: "{{ pod_subnet }}"
      controlPlaneEndpoint: "{{ vrrp_virtual_ip }}:{{ haproxy_listen_port }}"
      apiServer:
        certSans:
          - "{{ vrrp_virtual_ip }}"
          - "{{ ansible_host }}"
          - "{{ node_ip }}"
    kubernetes_config_kubelet_configuration:
      cgroupDriver: "systemd"
      address: "{{ node_ip }}"
      serializeImagePulls: false
    kubernetes_pod_network:
      cni: "{{ cni }}"
      cidr: "{{ pod_subnet }}"

- name: Flush handlers
  meta: flush_handlers

- name: Wait for API Reachability
  ansible.builtin.wait_for:
    host: "{{ vrrp_virtual_ip }}"
    port: "{{ haproxy_listen_port }}"
    delay: 2

- name: Generate join credentials
  ansible.builtin.include_tasks: lead-controller.yml
  when: inventory_hostname == lead_controller

- name: Deploy remaining nodes
  ansible.builtin.include_tasks: nodes.yml
  when: inventory_hostname != lead_controller
