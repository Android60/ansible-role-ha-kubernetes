---

###
# Create the JoinConfiguration file and join remaining nodes
#

- name: Set worker JoinConfiguration
  ansible.builtin.set_fact:
    join_configuration:
      nodeRegistration:
        name: "{{ node_name }}"
        kubeletExtraArgs:
          address: "{{ ansible_host }}"
      discovery:
        bootstrapToken:
          apiServerEndpoint: "{{ vrrp_virtual_ip }}:{{ haproxy_listen_port }}"
          token: "{{ hostvars[vars['lead_controller']]['token'].stdout }}"
          caCertHashes:
          - "sha256:{{ hostvars[vars['lead_controller']]['ca_hash'].stdout }}"

- name: Set controlPlane JoinConfiguration
  ansible.builtin.set_fact:
    control_join:
      controlPlane:
        localAPIEndpoint: 
          advertiseAddress: "{{ ansible_host }}"
        certificateKey: "{{ hostvars[vars['lead_controller']]['cert_key'].stdout_lines[-1] }}"

- name: Set controller JoinConfiguration
  ansible.builtin.set_fact:
    join_configuration: "{{ join_configuration | combine(control_join) }}"
  when: inventory_hostname in groups.controllers

- name: Deploy the join config
  ansible.builtin.template:
    src: "join-config.j2"
    dest: "/etc/kubernetes/join.config"

- name: Check if nodes have already joined the cluster
  ansible.builtin.stat:
    path: "/etc/kubernetes/kubelet.conf"
  register: joined

- name: Join the remaining nodes to the cluster
  ansible.builtin.command: kubeadm join --config /etc/kubernetes/join.config
  when: not joined.stat.exists
